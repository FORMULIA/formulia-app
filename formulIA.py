import streamlit as st

st.set_page_config(page_title="FormulIA - Generador de propuestas", layout="centered")

st.title("üß† FormulIA")
st.subheader("Sistema automatizado para estructuraci√≥n de propuestas")
st.markdown("---")

# Paso 1: Componentes
st.header("1Ô∏è‚É£ ¬øQu√© componentes incluye tu propuesta?")
componentes = st.multiselect(
    "Selecciona uno o varios:",
    ["Formaci√≥n", "Monitoreo y Evaluaci√≥n", "Materiales", "Operaci√≥n"]
)

# Paso 2: Modalidad
modalidades = {}
for comp in ["Formaci√≥n", "Operaci√≥n"]:
    if comp in componentes:
        modalidades[comp] = st.selectbox(
            f"¬øQu√© modalidad tendr√° el componente {comp}?",
            ["Presencial", "Virtual", "H√≠brida"],
            key=f"modalidad_{comp}"
        )

# Paso 3: Organizaci√≥n y Municipio
st.header("2Ô∏è‚É£ Datos generales del proyecto")

org = st.text_input("¬øA qu√© organizaci√≥n se dirige la propuesta?")
municipio = st.text_input("¬øEn qu√© municipio se ejecutar√° el proyecto?")

# Paso 4: Estrategias
st.header("3Ô∏è‚É£ Estrategias pedag√≥gicas")

estrategias = st.multiselect(
    "¬øQu√© estrategias deseas aplicar?",
    ["Transici√≥n", "Primero", "Remediaci√≥n"]
)

# Paso 5: Sedes educativas
st.header("4Ô∏è‚É£ Sedes educativas")

num_sedes = st.number_input("¬øCu√°ntas sedes ser√°n impactadas?", min_value=1, step=1)
sedes = []
for i in range(int(num_sedes)):
    nombre_sede = st.text_input(f"Nombre de la sede #{i+1}", key=f"sede_{i}")
    sedes.append(nombre_sede)

# Paso 6: Poblaci√≥n por sede y grado
st.header("5Ô∏è‚É£ Registro de estudiantes y docentes por sede")

poblacion_por_sede = {}

grados_por_estrategia = {
    "Transici√≥n": ["0¬∞"],
    "Primero": ["1¬∞"],
    "Remediaci√≥n": ["2¬∞", "3¬∞", "4¬∞", "5¬∞"]
}

# Determinar grados a preguntar seg√∫n las estrategias seleccionadas
grados_requeridos = set()
for est in estrategias:
    grados_requeridos.update(grados_por_estrategia[est])

# Preguntar si se desea incluir docentes de todos los grados
incluir_todos_docentes = st.radio(
    "¬øDeseas incluir a los docentes de todos los grados, independientemente de la estrategia seleccionada?",
    ["S√≠", "No"]
)

for sede in sedes:
    st.subheader(f"Sede: {sede}")
    poblacion_por_sede[sede] = {}

    for grado in ["0¬∞", "1¬∞", "2¬∞", "3¬∞", "4¬∞", "5¬∞"]:
        incluir_grado = grado in grados_requeridos or incluir_todos_docentes == "S√≠"

        if incluir_grado:
            col1, col2 = st.columns(2)
            with col1:
                est = st.number_input(
                    f"üë©‚Äçüéì Estudiantes en {grado} - {sede}",
                    min_value=0,
                    key=f"{sede}_{grado}_est"
                )
            with col2:
                doc = st.number_input(
                    f"üë®‚Äçüè´ Docentes en {grado} - {sede} (dejar en 0 si no sabes)",
                    min_value=0,
                    key=f"{sede}_{grado}_doc"
                )

            # Estimar docentes si no se ingresa n√∫mero
            if doc == 0 and est > 0:
                doc = round(est / 25)
                st.markdown(f"üîé *Docentes estimados: {doc}*")

            poblacion_por_sede[sede][grado] = {
                "estudiantes": est,
                "docentes": doc
            }

# Guardar datos de poblaci√≥n en sesi√≥n
st.session_state["poblacion_por_sede"] = poblacion_por_sede

# Paso 7: Selecci√≥n de materiales por estrategia
st.header("6Ô∏è‚É£ Selecci√≥n de materiales a incluir")

materiales_por_estrategia = {
    "Transici√≥n": [
        "Cartilla docente transici√≥n",
        "Cartilla estudiante transici√≥n",
        "Cartilla de cuentos transici√≥n",
        "Kit aula transici√≥n"
    ],
    "Primero": [
        "Gu√≠a docente tomo I",
        "Gu√≠a docente tomo II",
        "Gu√≠a estudiante unidad I",
        "Gu√≠a estudiante unidad II",
        "Gu√≠a estudiante unidad III",
        "Gu√≠a estudiante unidad IV",
        "Libro de cuentos",
        "Big Book",
        "Fichas",
        "Componedores aula",
        "Componedores individuales"
    ],
    "Remediaci√≥n": [
        "Gu√≠a docente remediaci√≥n",
        "Gu√≠a estudiante remediaci√≥n",
        "Cartilla cuentos remediaci√≥n",
        "Fichas de apoyo remediaci√≥n"
    ]
}

materiales_seleccionados = {}

for estrategia in estrategias:
    st.subheader(f"üì¶ Materiales para {estrategia}")
    seleccion = st.multiselect(
        f"Selecciona los materiales que deseas incluir para {estrategia}",
        materiales_por_estrategia[estrategia],
        key=f"materiales_{estrategia}"
    )
    materiales_seleccionados[estrategia] = seleccion

# Guardar materiales seleccionados
st.session_state["materiales_seleccionados"] = materiales_seleccionados